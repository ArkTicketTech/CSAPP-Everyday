chap 3.10.4 对抗缓冲器溢出攻击
  1.栈随机化
    攻击者需要在程序执行栈上插入指向攻击代码的指针来通过缓冲器溢出的方式执行攻击代码，过去程序栈比较容易预测，因此许多系统容易受到一种病毒的攻击，这种现象称为安全单一化。
    栈随机化的方法在程序开始时在栈上分配随机字节大小的空间使得程序每次执行时后续的栈位置发生变化。
    linux 中栈随机化是地址空间布局随机化的一部分，ASLR 使程序的不同部分都会被加载到不同的内存区域。
    攻击者可以在攻击代码前加上很长的 nop 指令，只要攻击者产生指针指向这一片内存区域的任一指令都可以最终执行到攻击代码。因此栈随机化可以增加成功攻击系统的难度，但不能提供完全的安全保障。
  2.栈破坏检测
    破坏通常发生在超越局部缓冲区的边界时，可以在发生越界写时尝试检测到终止异常程序。
    最近 GCC 产生的代码中加入了一种栈保护者的机制，指在栈帧中任一局部缓冲区和栈状态之间储存一个特殊的金丝雀值，在程序返回之前程序如果检测到这个值被程序改变了就终止程序。
    
  
